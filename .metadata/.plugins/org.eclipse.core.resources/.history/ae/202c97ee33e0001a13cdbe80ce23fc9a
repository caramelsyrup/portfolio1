package com.attendance.model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

public class AttendanceDAOImpl implements AttendanceDAO {
	
	// 객체 생성
		static AttendanceDAOImpl  instance = new AttendanceDAOImpl();
		public static AttendanceDAOImpl getInstance() {
			return instance;
		}
		//접속 
		private Connection getconnection() throws Exception {
				Context initCtx = new InitialContext();
				Context envCtx = (Context) initCtx.lookup("java:comp/env");
				DataSource ds = (DataSource) envCtx.lookup("jdbc/gallery");
				return ds.getConnection();
		}
		// 닫기
		public void closeconnection(Connection con, PreparedStatement pstmt) {
				try {
					if(pstmt!=null)
						pstmt.close();
					if(con!=null)
						con.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
		}
		public void closeconnection(Connection con, Statement st, ResultSet rs) {
			try {
				if(rs!=null)
					rs.close();
				if(st!=null)
					st.close();
				if(con!=null)
					con.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		
		@Override	// 참석하기 메소드
		public void AttendanceInsert(AttendanceViewDTO attend) {
			Connection con =null;
			PreparedStatement pstmt = null;
			
			try {
				con = getconnection();
				String sql = "INSERT INTO attendance VALUES "
						+ "(attendance_seq.nextval,?,TO_DATE(?,'YY-MM-DD'),?,?,?,?,?)";
				pstmt = con.prepareStatement(sql);
				pstmt.setString(1, attend.getUserid());
				pstmt.setString(2, attend.getEventsche());
				pstmt.setString(3, attend.getUsername());
				pstmt.setString(4, attend.getEventlocation());
				pstmt.setInt(5, attend.getPopulation());
				pstmt.setString(6, attend.getEventname());
				pstmt.executeUpdate();
				con.commit();
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				closeconnection(con, pstmt);
			}
		}
		
		@Override	// 유저의 예약 정보 조회
		public ArrayList<AttendanceViewDTO> attendanceList(String userid) {
				Connection con = null;
				Statement st = null;
				ResultSet rs = null;
				ArrayList<AttendanceViewDTO> arr = new ArrayList<AttendanceViewDTO>();
				
				try {
					con = getconnection();
					String sql = "SELECT eventlocation,eventname,TO_CHAR(eventsche,'YY-MM-DD') eventsche,population,userid,username,renum FROM attendance WHERE userid = '"+userid+"'";
					st = con.createStatement();
					rs = st.executeQuery(sql);
					while(rs.next()) {
						AttendanceViewDTO dto = new AttendanceViewDTO();
						dto.setEventlocation(rs.getString("eventlocation"));
						dto.setEventname(rs.getString("eventname"));
						dto.setEventsche(rs.getString("eventsche"));
						dto.setPopulation(rs.getInt("population"));
						dto.setUserid(rs.getString("userid"));
						dto.setUsername(rs.getString("username"));
						dto.setRenum(rs.getInt("renum"));
						arr.add(dto);
					}
				} catch (Exception e) {
					e.printStackTrace();
				} finally {
					closeconnection(con, st, rs);
				}
			return arr;
		}
		@Override	// 유저의 참석 정보 제거
		public void AttendanceDelete(int renum) {
			Connection con = null;
			Statement st = null;
			ResultSet rs = null;
			
			try {
				con = getconnection();
				st = con.createStatement();
				String sql = "DELETE FROM attendance WHERE renum ="+renum;
				rs = st.executeQuery(sql);
				if(rs.next()) {
					con.commit();
				}
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				closeconnection(con, st, rs);
			}
			

			
		}
		
	
		
}
